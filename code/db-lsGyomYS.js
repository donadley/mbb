let s=null;function a(){return new Promise((r,n)=>{if(s){r(s);return}const e=indexedDB.open("CustomerDB",1);e.onupgradeneeded=t=>{t.target.result.createObjectStore("customers",{keyPath:"id",autoIncrement:!0})},e.onsuccess=t=>{s=t.target.result,r(s)},e.onerror=t=>{n(t.target.error)}})}async function d(r){const e=(await a()).transaction("customers","readwrite");e.objectStore("customers").add(r),e.oncomplete=()=>{console.log("Customer data added:",r),alert("Customer data saved for offline use!")},e.onerror=o=>{console.error("Error saving customer data:",o.target.error)}}async function i(){const t=(await a()).transaction("customers","readonly").objectStore("customers").getAll();return new Promise((o,c)=>{t.onsuccess=()=>{o(t.result)},t.onerror=u=>{c(u.target.error)}})}export{d as a,i as g};
//# sourceMappingURL=db-lsGyomYS.js.map
